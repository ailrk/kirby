#!/bin/sh

function killDaemons() {
    pkill blurwal
    pkill dunst
    pkill ibus-daemon
    pkill vanela
    pkill compton
    pkill -f bspwpm-workspace-preview
}

# Environment
function setEnv() {
    export PATH="${PATH}:$HOME/.config/scripts"
    xrdb ~/.Xresources
    . $HOME/.cache/wal/colors.sh
    sleep 0.1
}

# detect monitors and set
function setMonitor() {
    MONITORS=$(xrandr | grep -o "^.* connected" | sed "s/ connected//" )
    XAXIS=$(xrandr --current | grep -A1 'connected' | \
        grep -P '[0-9]{4}x[0-9]{4} ' | uniq | awk '{print $1}' | cut -d 'x' -f1)
    YAXIS=$(xrandr --current | grep -A1 'connected' | \
        grep -P '[0-9]{4}x[0-9]{4} ' | uniq | awk '{print $1}' | cut -d 'x' -f2)

    NUM_MONITOR=$(echo $MONITORS | wc -w)
    WORKSPACE_PER_SCREEN=4
    MAXIMUM_WORKSPACE=$(($WORKSPACE_PER_SCREEN * $NUM_MONITOR))
    if [ $MAXIMUM_WORKSPACE -gt 10 ]; then
        MAXIMUM_WORKSPACE=10
    fi

    echo "MAX WORKSPACE: $MAXIMUM_WORKSPACE"

    CURRENT_WORKSPACE=1

    # set workspace. up to 3 monitors and 10 workspaces.
    while read MONITOR; do
        if [ $CURRENT_WORKSPACE -gt $MAXIMUM_WORKSPACE ]; then
            break
        fi

        IDXS=""
        for ((i = 0; i < $WORKSPACE_PER_SCREEN; ++i)); do
            IDXS="$IDXS $(($i + $CURRENT_WORKSPACE))"
        done
        eval $"bspc monitor $MONITOR -d $IDXS"
        CURRENT_WORKSPACE=$(($CURRENT_WORKSPACE + 1 + $WORKSPACE_PER_SCREEN))

    done <<< $MONITORS


    MONITOR_NUM=0
    PREVIOUS_MONITOR="eDP-1"
    while read MONITOR; do
        MONITOR_NUM=$(($MONITOR_NUM + 1))
        X=$(echo $XAXIS | cut -d' ' -f"$MONITOR_NUM")
        Y=$(echo $YAXIS | cut -d' ' -f"$MONITOR_NUM")

        if [[ $MONITOR == "eDP-1" ]]; then
            xrandr --output eDP-1 --mode 1920x1080

        # new monitor is always added to the left of  the previous monitor
        else
            DIM="${X}x${Y}"
            if [[ X == 3840 ]]; then
                xrandr --output $MONITOR --mode $DIM --scale 0.8x0.8 \
                    --left-of $PREVIOUS_MONITOR
            fi
        fi

        PREVIOUS_MONITOR=$MONITOR
    done <<< $MONITORS
}

function setBspwmConfigs() {
    bspc config top_padding         -5
    bspc config bottom_padding      15
    bspc config left_padding        0
    bspc config right_padding       0
    bspc config border_width        5
    bspc config window_gap          10

    bspc config borderless_monocle   true
    bspc config gapless_monocle      true

    # bspc config normal_border_color $BLACK
    bspc config focused_border_color $WHITE
    bspc config split_ratio          0.5

    # bspc config presel_border_color "#ffbec9"
    # bspc config border_radius        10
}

function setBspwmRules() {
    ## Winodw rules
    # remove all rules first
    bspc rule -r *:*
    bspc rule -a urxvt:float state=floating rectangle=500x800+200+50
    bspc rule -a vimiv state=floating rectangle=700x100+500+50
    bspc rule -a "lemonbar" layer=above
}

function spawnDaemon() {
    ibus-daemon -drx
    sxhkd -c  ~/.config/sxhkd/sxhkdrc &
    vanela &
    mpc update
    mpc listall | mpc add
    compton --config ~/.config/compton-blur-term.conf&
    xinput set-prop 11 295 1
    dunst \
        -1b "$WHITE" -1f "$BLACK" -1fr "$BLACK" \
        -nb "$WHITE" -nf "$BLACK" -nfr "$BLACK" \
        -cb "$WHITE" -cf "$BLACK" -cfr "$BLACK" &
    sleep 0.5
}

function theme() {
    notify-send "Welcome Home! \(^w^)/"
    blurwal -m 1 -b 4 -s 4 &
    nohup ~/.config/scripts/bspwpm-workspace-preview &
    wal --themed solarized -l
    feh --bg-fill ~/.config/scripts/static/images/dune.jpg
}

# Start of the script

killDaemons
setEnv
setMonitor
setBspwmConfigs
setBspwmRules
spawnDaemon
theme
