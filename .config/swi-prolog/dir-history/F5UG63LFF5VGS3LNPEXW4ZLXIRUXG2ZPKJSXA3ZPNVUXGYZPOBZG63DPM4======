_HiStOrY_V2_
list_divide([1,2,3,4]).
list_divide([1,2,3,4],\040X,\040Y).
[demo].
:r.
[demo].
list_dividie_do(X,\040Y).
q.
[demo].
q.
[demo].
pay(X,\040Y).
trace.
pay(X,\040Y).
trace.
untrace.
[demo].
we_can_cut_this(0).
we_can_cut_this(X,\0400).
[demo].
:r.
[demo].
we_can_cut_this(X,\0402).
we_can_cut_this(0,\0402).
we_can_cut_this(3,\0402).
we_can_cut_this(3,\0403).
[demo].
likes(mary,\040python).
likes(mary,\040dog).
[demo].
not(likes(mary,\040dog)).
not(likes(mary,\040cobra)).
[demo].
cube.
[demo].
cube.
[demo].
[collatz-conjecture].
[collatz-conjecture.pl].
[collatz_conjecture].
run1(N).
run1(3).
run1(1).
run1(3).
[collatz_conjecture].
run1(4).
collatz_next(1,\040N).
run1(4).
[collatz_conjecture].
collatz_next(1,\040N).
[collatz_conjecture].
run1(3).
[collatz_conjecture].
collatz_next(1,\040N).
collatz_next(5,\040N).
[collatz_conjecture].
collatz_next(5,\040N).
collatz_next(N,\0405).
collatz_next(10,\040N).
collatz_reaches(5,\0401).
[collatz_conjecture].
collatz_reaches(5,\0401).
[collatz_conjecture].
run(N).
run1(N).
[horn-clause].
[horn_clause].
head.
q.
[horn_clause].
head.
use_module(library(lists)).
head.
[horn_clause].
turing([1,1,1],\040Ts).
[horn_clause].
turing([1,1,1],\040Ts).
[horn_clause].
turing([1,1,1],\040Ts).
[horn_clause].
turing([1,1,1],\040Ts).
turing([1,1,1,1,1,],\040Ts).
turing([1,1,1,1,1],\040Ts).
turing([1,1,b,1,1,1],\040Ts).
turing([1,1,b,1],\040Ts).
turing([1,1,1],\040Ts).
[horn_clause].
turing([1,1,+,1],\040Ts).
[horn_clause].
rule.
turing([1,1,b,1],\040Ts).
[horn_clause].
turing([1,1,+,1],\040Ts).
[horn_clause].
rule.
[horn_clause].
turing([1,1,+,1],\040Ts).
turing([1,1,+,1,1],\040Ts).
turing([1,1,+,1,1,2],\040Ts).
turing([1,1,+,1,1,1,1],\040Ts).D.
turing([1,1,+,1,1,1,1],\040Ts).
